import { EntityMap, InputTypeLike, JovoInput, JovoRequest, JovoSession, UnknownObject } from '@jovotech/framework';
import { AlexaCapabilityType } from './AlexaDevice';
import { AlexaEntity, Context, Request, Session, Unit } from './interfaces';
import { ResolutionPerAuthority } from './output';
export declare const ALEXA_REQUEST_TYPE_TO_INPUT_TYPE_MAP: Record<string, InputTypeLike>;
export declare class AlexaRequest extends JovoRequest {
    version?: string;
    context?: Context;
    session?: Session;
    request?: Request;
    getLocale(): string | undefined;
    private getAplUserEventArg;
    getIntent(): JovoInput['intent'];
    setIntent(intent: string): void;
    getEntities(): EntityMap<AlexaEntity> | undefined;
    getStaticEntityMatches(slotKey: string): ResolutionPerAuthority[];
    getDynamicEntityMatches(slotKey: string): ResolutionPerAuthority[];
    private getEntityResolutions;
    getInputType(): InputTypeLike | undefined;
    setLocale(locale: string): void;
    getInputText(): JovoInput['text'];
    getInputAudio(): JovoInput['audio'];
    getSessionData(): UnknownObject | undefined;
    setSessionData(session: JovoSession): void;
    getSessionId(): string | undefined;
    isNewSession(): boolean | undefined;
    isAplSupported(): boolean;
    getUserId(): string | undefined;
    setUserId(userId: string): void;
    getApiEndpoint(): string;
    getApiAccessToken(): string;
    getUnit(): Unit | undefined;
    getDeviceCapabilities(): AlexaCapabilityType[] | undefined;
    getDeviceId(): string;
}
